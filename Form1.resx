<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>